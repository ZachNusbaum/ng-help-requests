{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/help-request.service.ts","webpack:///./src/app/new-request/new-request.component.css","webpack:///./src/app/new-request/new-request.component.html","webpack:///./src/app/new-request/new-request.component.ts","webpack:///./src/app/view-requests/view-requests.component.css","webpack:///./src/app/view-requests/view-requests.component.html","webpack:///./src/app/view-requests/view-requests.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NewRequestComponent } from './new-request/new-request.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ViewRequestsComponent } from './view-requests/view-requests.component';\n\nconst routes: Routes = [\n  {path: '', component: NewRequestComponent},\n  {path: 'requests', component: ViewRequestsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<h1>Help Request Center</h1>\\n<a routerLink=\\\"/\\\">Add New</a>\\n<a routerLink=\\\"/requests\\\">View All</a>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { HelpRequestService } from './help-request.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NewRequestComponent } from './new-request/new-request.component';\nimport { ViewRequestsComponent } from './view-requests/view-requests.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewRequestComponent,\n    ViewRequestsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [HelpRequestService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HelpRequest } from './models/help-request';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelpRequestService {\n  base_uri = environment.base_uri;\n\n  constructor(private http: HttpClient) { }\n\n  public getAll() {\n    let uri = `${this.base_uri}`;\n    return this.http.get(uri);\n  }\n\n  public addNew(newRequest: HelpRequest) {\n    let uri = this.base_uri;\n    let headers = new HttpHeaders({'Content-Type': 'application/json'});\n    return this.http.post(uri, newRequest, {headers: headers});\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <h2>Submit New Request</h2>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #form=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"fullname\\\">Full name</label>\\n      <input type=\\\"text\\\" name=\\\"fullname\\\" [(ngModel)]=\\\"newRequest.fullname\\\" class=\\\"form-control\\\">\\n    </div>\\n  \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"subject\\\">Subject</label>\\n      <input type=\\\"text\\\" name=\\\"subject\\\" [(ngModel)]=\\\"newRequest.subject\\\" class=\\\"form-control\\\">\\n    </div>\\n  \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"message\\\">Message</label>\\n      <textarea name=\\\"message\\\" cols=\\\"30\\\" rows=\\\"10\\\" [(ngModel)]=\\\"newRequest.message\\\" class=\\\"form-control\\\"></textarea>\\n    </div>\\n  \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"Urgent\\\">Urgent</label>\\n      <input type=\\\"checkbox\\\" name=\\\"urgent\\\" value=\\\"urgent\\\" [(ngModel)]=\\\"newRequest.urgent\\\">\\n    </div>\\n  \\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"submit\\\" value=\\\"Send\\\">\\n    </div>\\n  </form>\\n</div>\\n\"","import { HelpRequest } from './../models/help-request';\nimport { HelpRequestService } from './../help-request.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-new-request',\n  templateUrl: './new-request.component.html',\n  styleUrls: ['./new-request.component.css']\n})\nexport class NewRequestComponent implements OnInit {\n  newRequest: HelpRequest = {\n    fullname: '',\n    subject: '',\n    message: '',\n    urgent: false\n  };\n\n  constructor(private reqService: HelpRequestService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.reqService.addNew(this.newRequest).subscribe((response: any) => {\n      if (response.success === true) {\n        alert('Thanks for the message!');\n      } else {\n        alert(`Error: ${response.message}`);\n      }\n\n      console.log(response);\n    }, (error) => {\n      alert('Error!');\n      console.log(error);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  view-requests works!\\n</p>\\n<pre>{{requests | json}}</pre>\\n\"","import { HelpRequest } from './../models/help-request';\nimport { HelpRequestService } from './../help-request.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-view-requests',\n  templateUrl: './view-requests.component.html',\n  styleUrls: ['./view-requests.component.css']\n})\nexport class ViewRequestsComponent implements OnInit {\n  requests: HelpRequest[] = [];\n\n  constructor(private reqService: HelpRequestService) { }\n\n  ngOnInit() {\n    this.reqService.getAll().subscribe((response: any) => {\n      this.requests = response.reqs;\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  base_uri: 'http://localhost:3000/helprequests'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}